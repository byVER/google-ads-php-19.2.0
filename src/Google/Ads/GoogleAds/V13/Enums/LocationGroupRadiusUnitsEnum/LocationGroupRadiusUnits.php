<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/googleads/v13/enums/location_group_radius_units.proto

namespace Google\Ads\GoogleAds\V13\Enums\LocationGroupRadiusUnitsEnum;

use UnexpectedValueException;

/**
 * The unit of radius distance in location group (for example, MILES)
 *
 * Protobuf type <code>google.ads.googleads.v13.enums.LocationGroupRadiusUnitsEnum.LocationGroupRadiusUnits</code>
 */
class LocationGroupRadiusUnits
{
    /**
     * Not specified.
     *
     * Generated from protobuf enum <code>UNSPECIFIED = 0;</code>
     */
    public const UNSPECIFIED = 0;
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * Generated from protobuf enum <code>UNKNOWN = 1;</code>
     */
    public const UNKNOWN = 1;
    /**
     * Meters
     *
     * Generated from protobuf enum <code>METERS = 2;</code>
     */
    public const METERS = 2;
    /**
     * Miles
     *
     * Generated from protobuf enum <code>MILES = 3;</code>
     */
    public const MILES = 3;
    /**
     * Milli Miles
     *
     * Generated from protobuf enum <code>MILLI_MILES = 4;</code>
     */
    public const MILLI_MILES = 4;

    private static array $valueToName = [
        self::UNSPECIFIED => 'UNSPECIFIED',
        self::UNKNOWN => 'UNKNOWN',
        self::METERS => 'METERS',
        self::MILES => 'MILES',
        self::MILLI_MILES => 'MILLI_MILES',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', self::class, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = self::class . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', self::class, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(LocationGroupRadiusUnits::class, \Google\Ads\GoogleAds\V13\Enums\LocationGroupRadiusUnitsEnum_LocationGroupRadiusUnits::class);

